[2025-03-04T19:51:31.482+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: create_schema_tables_dag.create_schema_tables manual__2025-03-04T19:51:31.164324+00:00 [queued]>
[2025-03-04T19:51:31.486+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: create_schema_tables_dag.create_schema_tables manual__2025-03-04T19:51:31.164324+00:00 [queued]>
[2025-03-04T19:51:31.486+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 1
[2025-03-04T19:51:31.491+0000] {taskinstance.py:1382} INFO - Executing <Task(PostgresOperator): create_schema_tables> on 2025-03-04 19:51:31.164324+00:00
[2025-03-04T19:51:31.494+0000] {standard_task_runner.py:57} INFO - Started process 350 to run task
[2025-03-04T19:51:31.495+0000] {standard_task_runner.py:84} INFO - Running: ['airflow', 'tasks', 'run', 'create_schema_tables_dag', 'create_schema_tables', 'manual__2025-03-04T19:51:31.164324+00:00', '--job-id', '2', '--raw', '--subdir', 'DAGS_FOLDER/run_create.py', '--cfg-path', '/tmp/tmpu2mupo9x']
[2025-03-04T19:51:31.497+0000] {standard_task_runner.py:85} INFO - Job 2: Subtask create_schema_tables
[2025-03-04T19:51:31.519+0000] {task_command.py:416} INFO - Running <TaskInstance: create_schema_tables_dag.create_schema_tables manual__2025-03-04T19:51:31.164324+00:00 [running]> on host 1a0abd39025c
[2025-03-04T19:51:31.555+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='create_schema_tables_dag' AIRFLOW_CTX_TASK_ID='create_schema_tables' AIRFLOW_CTX_EXECUTION_DATE='2025-03-04T19:51:31.164324+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-03-04T19:51:31.164324+00:00'
[2025-03-04T19:51:31.555+0000] {sql.py:274} INFO - Executing: -- create_schema_tables.sql

-- Create the schema if it doesn't exist
CREATE SCHEMA IF NOT EXISTS my_schema;

--------------------------------------------------
-- Customers Table
--------------------------------------------------
CREATE TABLE IF NOT EXISTS my_schema.customers (
    customer_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    species VARCHAR(50),
    origin_dimension VARCHAR(50),
    soul_balance NUMERIC(10,2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

--------------------------------------------------
-- Merchants Table
--------------------------------------------------
CREATE TABLE IF NOT EXISTS my_schema.merchants (
    merchant_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    business_type VARCHAR(50),
    base_dimension VARCHAR(50),
    power_level INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

--------------------------------------------------
-- Transactions Table
--------------------------------------------------
CREATE TABLE IF NOT EXISTS my_schema.transactions (
    transaction_id SERIAL PRIMARY KEY,
    customer_id INTEGER NOT NULL,
    merchant_id INTEGER NOT NULL,
    total_energy_cost NUMERIC(10,2),
    soul_payment NUMERIC(10,2),
    transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_customer
        FOREIGN KEY (customer_id)
        REFERENCES my_schema.customers(customer_id)
        ON DELETE CASCADE,
    CONSTRAINT fk_merchant
        FOREIGN KEY (merchant_id)
        REFERENCES my_schema.merchants(merchant_id)
        ON DELETE CASCADE
);

--------------------------------------------------
-- Products Table
--------------------------------------------------
CREATE TABLE IF NOT EXISTS my_schema.products (
    product_id SERIAL PRIMARY KEY,
    merchant_id INTEGER NOT NULL,
    product_name VARCHAR(100) NOT NULL,
    origin VARCHAR(50),
    time_period VARCHAR(50),
    rarity_level VARCHAR(50),
    energy_cost NUMERIC(10,2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_product_merchant
        FOREIGN KEY (merchant_id)
        REFERENCES my_schema.merchants(merchant_id)
        ON DELETE CASCADE
);

--------------------------------------------------
-- Shipments Table
--------------------------------------------------
CREATE TABLE IF NOT EXISTS my_schema.shipments (
    shipment_id SERIAL PRIMARY KEY,
    transaction_id INTEGER NOT NULL,
    origin_dimension VARCHAR(50),
    destination_dimension VARCHAR(50),
    delivery_speed INTEGER,
    estimated_arrival TIMESTAMP,
    status VARCHAR(50),
    CONSTRAINT fk_shipment_transaction
        FOREIGN KEY (transaction_id)
        REFERENCES my_schema.transactions(transaction_id)
        ON DELETE CASCADE
);
[2025-03-04T19:51:31.558+0000] {base.py:73} INFO - Using connection ID 'postgres_default' for task execution.
[2025-03-04T19:51:31.564+0000] {base.py:73} INFO - Using connection ID 'postgres_default' for task execution.
[2025-03-04T19:51:31.566+0000] {sql.py:418} INFO - Running statement: -- create_schema_tables.sql

-- Create the schema if it doesn't exist
CREATE SCHEMA IF NOT EXISTS my_schema;

--------------------------------------------------
-- Customers Table
--------------------------------------------------
CREATE TABLE IF NOT EXISTS my_schema.customers (
    customer_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    species VARCHAR(50),
    origin_dimension VARCHAR(50),
    soul_balance NUMERIC(10,2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

--------------------------------------------------
-- Merchants Table
--------------------------------------------------
CREATE TABLE IF NOT EXISTS my_schema.merchants (
    merchant_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    business_type VARCHAR(50),
    base_dimension VARCHAR(50),
    power_level INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

--------------------------------------------------
-- Transactions Table
--------------------------------------------------
CREATE TABLE IF NOT EXISTS my_schema.transactions (
    transaction_id SERIAL PRIMARY KEY,
    customer_id INTEGER NOT NULL,
    merchant_id INTEGER NOT NULL,
    total_energy_cost NUMERIC(10,2),
    soul_payment NUMERIC(10,2),
    transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_customer
        FOREIGN KEY (customer_id)
        REFERENCES my_schema.customers(customer_id)
        ON DELETE CASCADE,
    CONSTRAINT fk_merchant
        FOREIGN KEY (merchant_id)
        REFERENCES my_schema.merchants(merchant_id)
        ON DELETE CASCADE
);

--------------------------------------------------
-- Products Table
--------------------------------------------------
CREATE TABLE IF NOT EXISTS my_schema.products (
    product_id SERIAL PRIMARY KEY,
    merchant_id INTEGER NOT NULL,
    product_name VARCHAR(100) NOT NULL,
    origin VARCHAR(50),
    time_period VARCHAR(50),
    rarity_level VARCHAR(50),
    energy_cost NUMERIC(10,2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_product_merchant
        FOREIGN KEY (merchant_id)
        REFERENCES my_schema.merchants(merchant_id)
        ON DELETE CASCADE
);

--------------------------------------------------
-- Shipments Table
--------------------------------------------------
CREATE TABLE IF NOT EXISTS my_schema.shipments (
    shipment_id SERIAL PRIMARY KEY,
    transaction_id INTEGER NOT NULL,
    origin_dimension VARCHAR(50),
    destination_dimension VARCHAR(50),
    delivery_speed INTEGER,
    estimated_arrival TIMESTAMP,
    status VARCHAR(50),
    CONSTRAINT fk_shipment_transaction
        FOREIGN KEY (transaction_id)
        REFERENCES my_schema.transactions(transaction_id)
        ON DELETE CASCADE
);, parameters: None
[2025-03-04T19:51:31.578+0000] {taskinstance.py:1400} INFO - Marking task as SUCCESS. dag_id=create_schema_tables_dag, task_id=create_schema_tables, execution_date=20250304T195131, start_date=20250304T195131, end_date=20250304T195131
[2025-03-04T19:51:31.596+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 0
[2025-03-04T19:51:31.603+0000] {taskinstance.py:2778} INFO - 0 downstream tasks scheduled from follow-on schedule check
